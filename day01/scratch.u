use .base
use .io


use test.v1

-- readInputFromAFile : '{io.IO} Unit
-- readInputFromAFile = 'let
--   filePath = FilePath.FilePath "./day01/input.txt"
--   fileHandle = openFile filePath Mode.Read
--   fileContents = getText fileHandle
--   printLine fileContents
--   closeFile fileHandle
--
--
parseAlpha: Text -> Either (List Text) Char
parseAlpha txt = case char.toCharList txt of
  x +: _  | (or (and (Char.toNat x >= 65) (Char.toNat x <= 90))
                (and (Char.toNat x >= 97) (Char.toNat x <= 122)))  ->
    Right x
  x +: _  ->
    Left ["Leftmost char was not Alphanumeric: " :+ x ]
  _  ->
    Left ["Input was Empty:"]


test> [ expect ((parseAlpha "a") == (Right ?a))
      , expect ((parseAlpha "z") == (Right ?z))
      , expect ((parseAlpha "A") == (Right ?A))
      , expect ((parseAlpha "Z") == (Right ?Z))
      , expect ((parseAlpha "") == (Left ["Input was Empty:"]))
      , expect ((parseAlpha "#") == (Left ["Leftmost char was not Alphanumeric: #"]))
      ] |> tests |> run




-- sumInputFromAFile : '{io.IO} Unit
-- sumInputFromAFile = 'let
--   filePath = FilePath.FilePath "./day01/input.txt"
--   fileHandle = openFile filePath Mode.Read
--   fileContents = getText fileHandle
--   printLine fileContents
--   closeFile fileHandle

-- program1:
